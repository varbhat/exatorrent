name: Create and publish Container images

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
  push:
    branches:
      - "main"

jobs:
  build-container-images:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Docker meta and tags
        id: meta
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/${{ github.repository_owner }}/exatorrent
          # generate Docker tags based on the following events/attributes
          tags: |
            type=raw,value=amd64
            type=raw,value=arm64
            type=raw,value=latest,enable=${{ startsWith(github.ref, 'refs/tags/v') }}
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/bake-action@v4
        with:
          files: |
            ./docker-bake.hcl
            ${{ steps.meta.outputs.bake-file }}
          push: true
          set: |
            *.cache-from=type=gha
            *.cache-to=type=gha,mode=max

  build-binaries-darwin:
    runs-on: macos-11
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: internal/web/package-lock.json

      - name: Install node dependencies
        run: npm ci
        working-directory: internal/web
      - name: Build frontend
        run: make web

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.22
          cache: true

      - name: Build amd64
        run: |
          make app-no-sl
          mv build/exatorrent build/exatorrent-darwin-amd64
        env:
          GOOS: darwin
          GOARCH: amd64

      - name: Build arm64
        run: |
          make app-no-sl
          mv build/exatorrent build/exatorrent-darwin-arm64
        env:
          GOOS: darwin
          GOARCH: arm64

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: binaries-darwin
          path: build/*
          if-no-files-found: error

  build-binaries-linux:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Create artifacts
        uses: docker/bake-action@v4
        with:
          files: |
            ./docker-bake.hcl
          targets: artifact-linux
          provenance: false

      - name: Flatten artifact
        uses: docker/bake-action@v4
        with:
          files: |
            ./docker-bake.hcl
          targets: release
          provenance: false

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: binaries-linux
          path: release/*
          if-no-files-found: error

  gh-release:
    needs:
      - build-binaries-linux
      - build-binaries-darwin
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write
    steps:
      - uses: actions/download-artifact@v3
        id: binaries

      - name: Display structure of downloaded files
        run: ls -R ${{steps.binaries.outputs.download-path}}

      - name: GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          fail_on_unmatched_files: true
          files: |
            ${{steps.binaries.outputs.download-path}}/binaries-linux/*
            ${{steps.binaries.outputs.download-path}}/binaries-darwin/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
