name: Create and publish Container images

on:
  pull_request: 
    branches:
      - "main"
  push:
    tags:
      - v*

jobs:
  build-container-images:
    if: ${{ github.repository_owner }} == "varbhat"
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Docker meta and tags
        id: meta
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/${{ github.repository_owner }}/exatorrent
          # generate Docker tags based on the following events/attributes
          tags: |
            type=raw,value=amd64
            type=raw,value=arm64
            type=raw,value=latest
            type=raw,value=arm32
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/bake-action@v4
        with:
          files: |
            ./docker-bake.hcl
            ${{ steps.meta.outputs.bake-file }}
          push: true
          set: |
            *.cache-from=type=gha
            *.cache-to=type=gha,mode=max

  gh-release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Create artifacts for all platform
        uses: docker/bake-action@v4
        with:
          files: |
            ./docker-bake.hcl
          targets: artifact-all
          provenance: false

      - name: Flatten artifact
        uses: docker/bake-action@v4
        with:
          files: |
            ./docker-bake.hcl
          targets: release
          provenance: false

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          path: release/*
          if-no-files-found: error

      - name: GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
          fail_on_unmatched_files: true
          files: |
            release/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
